server {

	listen 80;

	root /home/user/git/myclublink/frontend/;

	index index.html index.htm;

	server_name dev.myclublink.com.au;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /system {
		#TODO move non web socket stuff to fastcgi. At least think about it
		#include fastcgi_params;
		#fastcgi_pass 127.0.0.1:8080
		proxy_pass http://127.0.0.1:8080;
		#proxy_set_header X-Real-IP $remote_addr;
	}

	location /ws {
		#pass through the request to the go backend server http://nginx.org/en/docs/http/websocket.html
    		proxy_http_version 1.1;
    		proxy_set_header Upgrade $http_upgrade;
    		proxy_set_header Connection "upgrade";
		
		#pass it to the golang binary listening on 8080
		proxy_pass http://127.0.0.1:8080;
		#set the real IP to $remote_addr variable
		#proxy_set_header X-Real_IP $remote_addr;
	}
	
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
