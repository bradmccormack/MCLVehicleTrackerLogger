#/bin/bash

#Add myclublink user to the system
addgroup http
echo "* Adding myclublink user to system"
pass=$(perl -e 'print crypt($ARGV[0], "password")' "3enchm@rk789")
useradd -m -p $pass "myclublink" -G http  #add myclublink to http group


#Add current user to myclublink group
CURRENTUSER="`logname`"
usermod -a -G myclublink $CURRENTUSER 

#Add current user to the http group so they can have access to myclublink directories etc
sudo addgroup $CURRENTUSER http --quiet

if [[ $EUID -ne 0 ]]; then
	echo "This script needs to be run as root. Exiting .."
	exit 1
fi

#Note - Later I'll add the public ssh key to bitbucket automatically for the current machine and generate it via ssh-keygen if one not generated

echo "* Upating package sources"
#sudo apt-get update

echo "* Installing package dependencies"
for dep in git nginx htop vim samba openssh-server curl; do
	if dpkg -s $dep 2>/dev/null 1>/dev/null; then
		echo $dep " is installed already. Skipping "
	else
		sudo apt-get install $dep -y
	fi
done
echo "- Update done"

echo "* Setting up SSH keys .."
#Generate ssh keys for myclublink user
if [ ! -d "/home/myclublink/.ssh" ]; then
	echo "- SSH keys don't exist so I'm creating them in /home/myclublink/.ssh"
	sudo -u myclublink ssh-keygen -b 4096 -t rsa -f /home/myclublink/.ssh/id_rsa -P ""
	#this is probably bad but will do for now. Allow members of myclublink group to read from .ssh
	sudo chmod -R 750 /home/myclublink/.ssh 
	
	echo "SSH Keys have been created. Please enter them manually on BitBucket account for now"
	exit 1
else
	echo "- SSH keys already in place. I won't create them"
fi

#add the ssh public key to the bitbucket rep

PUBLICKEY=`cat /etc/home/myclublink/.ssh/id_rsa.pub`
curl "https://bitbucket.org/api/1.0/users/bradmccormack/ssh-keys/" -H "Accept-Encoding: gzip,deflate,sdch" -H "Host: bitbucket.org" -H "Content-Type: application/x-www-form-urlencoded" -H "Accept: */*" -H "Cache-Control: no-cache" -H "Cookie: optimizelyEndUserId=oeu1371266234695r0.6271766992285848; optimizelySegments=%7B%22202765491%22%3A%22false%22%2C%22202916208%22%3A%22gc%22%2C%22202920152%22%3A%22search%22%7D; optimizelyBuckets=%7B%7D; bb_session=93c5927301f7a1a297bb8abafb2d062d; csrftoken=91d40f7b72f3e126367cd9ced6e36851; __utma=254090395.942569903.1371266236.1371266236.1371266236.1; __utmb=254090395.20.10.1371266236; __utmc=254090395; __utmz=254090395.1371266236.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); __utmv=254090395.|1=isBBUser=true=1" -H "Connection: keep-alive" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3" --data-urlencode "key=$PUBLICKEY" --data-urlencode "label=vmtest"



#delete the current config file if one is there
if [ -f $HOME/.ssh/config ]; then
	sudo rm $HOME/.ssh/config
fi

#Silence the nagging of security prompt and set the identity to use for ssh
sudo echo "Host bitbucket.org" >> $HOME/.ssh/config 
sudo echo "StrictHostKeyChecking no" >> $HOME/.ssh/config
sudo echo "IdentityFile /home/myclublink/.ssh/id_rsa.pub" >> $HOME/.ssh/config


#Create git directory for myclublink user ready to download if it doesn't exist
if [ ! -d "/home/myclublink/git" ]; then
	sudo -u myclublink mkdir -p /home/myclublink/git
	sudo chmod 775 /home/myclublink/git
fi

cd /home/myclublink/git/
if [ -d "myclublink" ]; then
	echo "- myclublink repo already exists. Pulling latest code"
	sudo -u myclublink git clean -f --quiet
        sudo -u myclublink git pull --quiet
else
	echo "- Cloning repository"
	git clone git@bitbucket.org:bradmccormack/myclublink.git --quiet
fi

echo "- Code pulled down."

if [ -d "/etc/nginx" ]; then
	echo "* Nginx config being deployed and web server being restarted"
	#create symbolic links that point back to this config. Later it will be trivial to run this script and have updated web server configurations
	
	#only create if they don't exist
	if [ ! -L /etc/nginx/sites-available/internal.myClubLink.com.au.conf ]; then
		sudo ln -s /home/myclublink/git/myclublink/Conf/nginx/internal.myClubLink.com.au.conf /etc/nginx/sites-available/internal.myClubLink.com.au.conf
	fi

	if [ ! -L /etc/nginx/sites-enabled/internal.myClubLink.com.au.conf ]; then
		sudo ln -s /home/myclublink/git/myclublink/Conf/nginx/internal.myClubLink.com.au.conf /etc/nginx/sites-enabled/internal.myClubLink.com.au.conf
	fi
	sudo rm /etc/nginx/sites-enabled/default -f
else
	echo "- Nginx didn't install correctly before. Aborting script!"
	exit 1
fi

#create a file share for the installer - TODO put this in a chroot
if [ ! "/etc/samba" ]; then
	echo "- Samba didn't install correctly. Aborting script!"
else
	#hose the default one and link to our versioned one and add the curent user to samba
	sudo rm /etc/samba/smb.conf -f
	sudo ln -s /home/myclublink/git/myclublink/Conf/samba/smb.conf /etc/samba/smb.conf
	(echo myclublink; echo myclublink) | smbpasswd -s 2>/dev/null 1>/dev/null
	sudo service smbd restart --quiet
	sudo service nmbd restart --quiet
fi

sudo service nginx restart --quiet

ip=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
echo "myClubLink is now running . Hit it on"  $ip "or add it to the host file of the user or DNS server for the users on the local network"
